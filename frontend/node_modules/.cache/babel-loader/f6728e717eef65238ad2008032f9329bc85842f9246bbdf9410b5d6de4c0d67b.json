{"ast":null,"code":"var _jsxFileName = \"/Users/ayoung/work/src/github.com/dcwb/frontend/src/components/Gallery.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Gallery = () => {\n  _s();\n  const [media, setMedia] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchMedia = async () => {\n      try {\n        const response = await fetch('/api/gallery');\n        const data = await response.json();\n        setMedia(data);\n      } catch (error) {\n        console.error('Error fetching media:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMedia();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery\",\n    children: media.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No media available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this) : media.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media-item\",\n      children: item.type === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.url,\n        alt: `Media ${item.id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: item.url,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }, this), \"Your browser does not support the video tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Gallery, \"Qc+k4n1oKZ81y/a4EyR/1pM9ulI=\");\n_c = Gallery;\nexport default Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Gallery","_s","media","setMedia","loading","setLoading","fetchMedia","response","fetch","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","item","type","src","url","alt","id","controls","_c","$RefreshReg$"],"sources":["/Users/ayoung/work/src/github.com/dcwb/frontend/src/components/Gallery.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Gallery: React.FC = () => {\n    const [media, setMedia] = useState<Array<{ id: string; url: string; type: string }>>([]);\n    const [loading, setLoading] = useState<boolean>(true);\n\n    useEffect(() => {\n        const fetchMedia = async () => {\n            try {\n                const response = await fetch('/api/gallery');\n                const data = await response.json();\n                setMedia(data);\n            } catch (error) {\n                console.error('Error fetching media:', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchMedia();\n    }, []);\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div className=\"gallery\">\n            {media.length === 0 ? (\n                <p>No media available.</p>\n            ) : (\n                media.map(item => (\n                    <div key={item.id} className=\"media-item\">\n                        {item.type === 'image' ? (\n                            <img src={item.url} alt={`Media ${item.id}`} />\n                        ) : (\n                            <video controls>\n                                <source src={item.url} type=\"video/mp4\" />\n                                Your browser does not support the video tag.\n                            </video>\n                        )}\n                    </div>\n                ))\n            )}\n        </div>\n    );\n};\n\nexport default Gallery;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,OAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAmD,EAAE,CAAC;EACxF,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAU,IAAI,CAAC;EAErDD,SAAS,CAAC,MAAM;IACZ,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAc,CAAC;QAC5C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCP,QAAQ,CAACM,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD,CAAC,SAAS;QACNN,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDC,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE;IACT,oBAAOL,OAAA;MAAAc,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,oBACIlB,OAAA;IAAKmB,SAAS,EAAC,SAAS;IAAAL,QAAA,EACnBX,KAAK,CAACiB,MAAM,KAAK,CAAC,gBACfpB,OAAA;MAAAc,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAE1Bf,KAAK,CAACkB,GAAG,CAACC,IAAI,iBACVtB,OAAA;MAAmBmB,SAAS,EAAC,YAAY;MAAAL,QAAA,EACpCQ,IAAI,CAACC,IAAI,KAAK,OAAO,gBAClBvB,OAAA;QAAKwB,GAAG,EAAEF,IAAI,CAACG,GAAI;QAACC,GAAG,EAAE,SAASJ,IAAI,CAACK,EAAE;MAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAE/ClB,OAAA;QAAO4B,QAAQ;QAAAd,QAAA,gBACXd,OAAA;UAAQwB,GAAG,EAAEF,IAAI,CAACG,GAAI;UAACF,IAAI,EAAC;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gDAE9C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IACV,GARKI,IAAI,CAACK,EAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASZ,CACR;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAChB,EAAA,CA5CID,OAAiB;AAAA4B,EAAA,GAAjB5B,OAAiB;AA8CvB,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}