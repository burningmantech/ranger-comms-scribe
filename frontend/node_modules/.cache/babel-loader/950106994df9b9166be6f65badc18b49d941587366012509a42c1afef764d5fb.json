{"ast":null,"code":"import React,{useEffect,useState}from'react';import{GOOGLE_CLIENT_ID}from'../config';import{loadGoogleOneTap,handleGoogleCredentialResponse}from'../utils/googleAuth';import{fetchBlogContent,logoutUser}from'../utils/userActions';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const[user,setUser]=useState(null);const[blogContent,setBlogContent]=useState(null);// Load user and session from localStorage on component mount\nuseEffect(()=>{const storedUser=localStorage.getItem('user');if(storedUser){setUser(JSON.parse(storedUser));}},[]);// Initialize Google One Tap if the user is not logged in\nuseEffect(()=>{if(!user&&!localStorage.getItem('user')){loadGoogleOneTap(GOOGLE_CLIENT_ID,response=>handleGoogleCredentialResponse(response,setUser));}},[user]);// Fetch blog content if the user is signed in\nuseEffect(()=>{if(user){fetchBlogContent(setBlogContent);}},[user]);// Logout function\nconst handleLogout=()=>{logoutUser(setUser,setBlogContent);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),user?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Welcome, \",user.name,\"!\"]}),\" \",/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,children:\"Logout\"}),\" \",blogContent?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Blog\"}),/*#__PURE__*/_jsx(\"div\",{dangerouslySetInnerHTML:{__html:blogContent}}),\" \"]}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading blog content...\"})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Google One Tap will appear automatically if you're eligible.\"})]});};export default Login;","map":{"version":3,"names":["React","useEffect","useState","GOOGLE_CLIENT_ID","loadGoogleOneTap","handleGoogleCredentialResponse","fetchBlogContent","logoutUser","jsx","_jsx","jsxs","_jsxs","Login","user","setUser","blogContent","setBlogContent","storedUser","localStorage","getItem","JSON","parse","response","handleLogout","children","name","onClick","dangerouslySetInnerHTML","__html"],"sources":["/Users/ayoung/work/src/github.com/dcwb/frontend/src/components/Login.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { API_URL, GOOGLE_CLIENT_ID } from '../config';\nimport { loadGoogleOneTap, handleGoogleCredentialResponse } from '../utils/googleAuth';\nimport { fetchBlogContent, logoutUser } from '../utils/userActions';\n\ndeclare global {\n    interface Window {\n        google: any;\n    }\n}\n\nconst Login: React.FC = () => {\n    const [user, setUser] = useState<{ email: string; name: string } | null>(null);\n    const [blogContent, setBlogContent] = useState<string | null>(null);\n\n    // Load user and session from localStorage on component mount\n    useEffect(() => {\n        const storedUser = localStorage.getItem('user');\n        if (storedUser) {\n            setUser(JSON.parse(storedUser));\n        }\n    }, []);\n\n    // Initialize Google One Tap if the user is not logged in\n    useEffect(() => {\n        if (!user && !localStorage.getItem('user')) {\n            loadGoogleOneTap(GOOGLE_CLIENT_ID, (response: any) =>\n                handleGoogleCredentialResponse(response, setUser)\n            );\n        }\n    }, [user]);\n\n    // Fetch blog content if the user is signed in\n    useEffect(() => {\n        if (user) {\n            fetchBlogContent(setBlogContent);\n        }\n    }, [user]);\n\n    // Logout function\n    const handleLogout = () => {\n        logoutUser(setUser, setBlogContent);\n    };\n\n    return (\n        <div>\n            <h2>Login</h2>\n            {user ? (\n                <div>\n                    <p>Welcome, {user.name}!</p> {/* Display the user's name */}\n                    <button onClick={handleLogout}>Logout</button> {/* Logout button */}\n                    {blogContent ? (\n                        <div>\n                            <h3>Blog</h3>\n                            <div dangerouslySetInnerHTML={{ __html: blogContent }} /> {/* Render blog content */}\n                        </div>\n                    ) : (\n                        <p>Loading blog content...</p>\n                    )}\n                </div>\n            ) : (\n                <p>Google One Tap will appear automatically if you're eligible.</p>\n            )}\n        </div>\n    );\n};\n\nexport default Login;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAAkBC,gBAAgB,KAAQ,WAAW,CACrD,OAASC,gBAAgB,CAAEC,8BAA8B,KAAQ,qBAAqB,CACtF,OAASC,gBAAgB,CAAEC,UAAU,KAAQ,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAQpE,KAAM,CAAAC,KAAe,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAAyC,IAAI,CAAC,CAC9E,KAAM,CAACa,WAAW,CAAEC,cAAc,CAAC,CAAGd,QAAQ,CAAgB,IAAI,CAAC,CAEnE;AACAD,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAgB,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAC/C,GAAIF,UAAU,CAAE,CACZH,OAAO,CAACM,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC,CACnC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN;AACAhB,SAAS,CAAC,IAAM,CACZ,GAAI,CAACY,IAAI,EAAI,CAACK,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAE,CACxCf,gBAAgB,CAACD,gBAAgB,CAAGmB,QAAa,EAC7CjB,8BAA8B,CAACiB,QAAQ,CAAER,OAAO,CACpD,CAAC,CACL,CACJ,CAAC,CAAE,CAACD,IAAI,CAAC,CAAC,CAEV;AACAZ,SAAS,CAAC,IAAM,CACZ,GAAIY,IAAI,CAAE,CACNP,gBAAgB,CAACU,cAAc,CAAC,CACpC,CACJ,CAAC,CAAE,CAACH,IAAI,CAAC,CAAC,CAEV;AACA,KAAM,CAAAU,YAAY,CAAGA,CAAA,GAAM,CACvBhB,UAAU,CAACO,OAAO,CAAEE,cAAc,CAAC,CACvC,CAAC,CAED,mBACIL,KAAA,QAAAa,QAAA,eACIf,IAAA,OAAAe,QAAA,CAAI,OAAK,CAAI,CAAC,CACbX,IAAI,cACDF,KAAA,QAAAa,QAAA,eACIb,KAAA,MAAAa,QAAA,EAAG,WAAS,CAACX,IAAI,CAACY,IAAI,CAAC,GAAC,EAAG,CAAC,IAAC,cAC7BhB,IAAA,WAAQiB,OAAO,CAAEH,YAAa,CAAAC,QAAA,CAAC,QAAM,CAAQ,CAAC,IAAC,CAC9CT,WAAW,cACRJ,KAAA,QAAAa,QAAA,eACIf,IAAA,OAAAe,QAAA,CAAI,MAAI,CAAI,CAAC,cACbf,IAAA,QAAKkB,uBAAuB,CAAE,CAAEC,MAAM,CAAEb,WAAY,CAAE,CAAE,CAAC,IAAC,EACzD,CAAC,cAENN,IAAA,MAAAe,QAAA,CAAG,yBAAuB,CAAG,CAChC,EACA,CAAC,cAENf,IAAA,MAAAe,QAAA,CAAG,8DAA4D,CAAG,CACrE,EACA,CAAC,CAEd,CAAC,CAED,cAAe,CAAAZ,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}